import os
import logging
from fastapi import FastAPI, Request
import httpx
from aiogram import Bot, Dispatcher, types, Router
from aiogram.filters import Command, Text

# ------- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è & –ª–æ–≥—É–≤–∞–Ω–Ω—è -------
logging.basicConfig(level=logging.INFO)
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = os.getenv("ADMIN_ID")  # –º–æ–∂–Ω–∞ –ø—É—Å—Ç–∏–º, —è–∫—â–æ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ
BASE_URL = os.getenv("BASE_URL")  # –Ω–∞–ø—Ä. https://katarsees-bot-xxxx.onrender.com (–±–µ–∑ / –≤ –∫—ñ–Ω—Ü—ñ)
WEBHOOK_SECRET = os.getenv("WEBHOOK_SECRET")  # –±—É–¥—å-—è–∫–∏–π —Ä—è–¥–æ–∫, —ñ–¥–µ–Ω—Ç–∏—á–Ω–∏–π —É ENV —ñ –≤ URL

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()
router = Router()
dp.include_router(router)

app = FastAPI()

# ------- –ö–Ω–æ–ø–∫–∏ -------
def main_kb():
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add("üîÆ –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞", "üí∞ –û–ø–ª–∞—Ç–∞")
    kb.add("üìö –ù–∞–≤—á–∞–Ω–Ω—è")
    kb.add("üóìÔ∏è –ó–∞–ø–∏—Å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é")
    return kb

# ------- –û–±—Ä–æ–±–Ω–∏–∫–∏ (v3 —Å–∏–Ω—Ç–∞–∫—Å–∏—Å) -------
@router.message(Command("start"))
async def start_cmd(message: types.Message):
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –û–±–µ—Ä–∏, —â–æ —Ç–µ–±–µ —Ü—ñ–∫–∞–≤–∏—Ç—å üëá", reply_markup=main_kb())

@router.message(Text("üîÆ –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞"))
async def diag_cmd(message: types.Message):
    await message.answer("ü™Ñ –ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–æ, —â–æ —Ç–µ–±–µ —Ç—É—Ä–±—É—î ‚Äî —è –ø–µ—Ä–µ–¥–∞–º Katarsees üî•")

@router.message(Text("üí∞ –û–ø–ª–∞—Ç–∞"))
async def pay_cmd(message: types.Message):
    await message.answer("üíµ –ü—ñ—Å–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞—è–≤–∫–∏ –Ω–∞–¥—ñ—à–ª—é —Ä–µ–∫–≤—ñ–∑–∏—Ç–∏ –¥–ª—è –æ–ø–ª–∞—Ç–∏.")

@router.message(Text("üìö –ù–∞–≤—á–∞–Ω–Ω—è"))
async def learn_cmd(message: types.Message):
    await message.answer("üßô‚Äç‚ôÄÔ∏è –û–±–µ—Ä–∏ —Ñ–æ—Ä–º–∞—Ç: –ø–æ–≤–Ω–∏–π –∫—É—Ä—Å / –≥—Ä—É–ø–∞ / –æ–¥–∏–Ω —É—Ä–æ–∫.")

@router.message(Text("üóìÔ∏è –ó–∞–ø–∏—Å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é"))
async def consult_cmd(message: types.Message):
    await message.answer("ü™û –ù–∞–ø–∏—à–∏ —Å–≤–æ—î —ñ–º‚Äô—è —Ç–∞ –∫–æ—Ä–æ—Ç–∫–æ —Ç–µ–º—É ‚Äî —ñ –º–∏ –ø–æ–≥–æ–¥–∏–º–æ —á–∞—Å.")

# ------- –í–µ–±—Ö—É–∫ -------
@app.post(f"/webhook/{WEBHOOK_SECRET}")
async def webhook(request: Request):
    data = await request.json()
    logging.info("Incoming update: %s", data)
    update = types.Update(**data)
    await dp.feed_update(bot, update)
    return {"ok": True}

@app.on_event("startup")
async def on_startup():
    webhook_url = f"{BASE_URL}/webhook/{WEBHOOK_SECRET}"
    async with httpx.AsyncClient() as client:
        # —Å–ø–µ—Ä—à—É –æ–±–Ω—É–ª—è—î–º–æ
        await client.get(f"https://api.telegram.org/bot{BOT_TOKEN}/deleteWebhook")
        # —ñ —Å—Ç–∞–≤–∏–º–æ –Ω–æ–≤–∏–π
        r = await client.get(
            f"https://api.telegram.org/bot{BOT_TOKEN}/setWebhook",
            params={"url": webhook_url}
        )
        logging.info("SetWebhook response: %s", r.text)
    logging.info("Webhook set to: %s", webhook_url)
