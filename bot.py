import os
from fastapi import FastAPI, Request, Response
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, Update

# === –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è ===
BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_SECRET = os.getenv("WEBHOOK_SECRET", "katarsees123")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()
app = FastAPI()

# === –•–µ–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥–∏ /start ===
@dp.message(F.text == "/start")
async def start_command(message: Message):
    await message.answer("‚ú® –í—ñ—Ç–∞—é! Katarsees Assistant –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏.")

# === –•–µ–Ω–¥–ª–µ—Ä –≤–µ–±—Ö—É–∫–∞ ===
@app.post(f"/webhook/{WEBHOOK_SECRET}")
async def webhook(request: Request):
    try:
        data = await request.json()
        update = Update.model_validate(data)
        await dp.feed_update(bot, update)
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ —É webhook: {e}")
    return Response(status_code=200)

# === –¢–µ—Å—Ç–æ–≤–∏–π –∫–æ—Ä—ñ–Ω—å –¥–ª—è Render ===
@app.get("/")
async def root():
    return {"status": "bot is alive üí´"}

# === –õ–æ–∫–∞–ª—å–Ω–∏–π –∑–∞–ø—É—Å–∫ (–Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –Ω–∞ Render) ===
if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=10000)
